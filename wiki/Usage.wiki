#summary How to use this addon in a Roo managed Java project

===Project Configuration===
  # You can create a Roo managed project from the Roo shell:
{{{
project --topLevelPackage com.example.app
}}}
  # In order to use the @!RooEquals annotation you need to add a dependency to your project's pom.xml. The annotation jar file is hosted in the addon's maven repository on Google Code.
{{{
<repositories>
...
  <repository>
    <id>googlecode.rooequals.repo</id>
    <url>https://spring-roo-equals-roo-addon.googlecode.com/svn/maven-repository/</url>
    <releases>
      <enabled>true</enabled>
    </releases>
    <snapshots>
      <enabled>false</enabled>
    </snapshots>
  </repository>
  <repository>
    <id>googlecode.rooequals.snapshotrepo</id>
    <url>https://spring-roo-equals-roo-addon.googlecode.com/svn/maven-snapshot-repository/</url>
    <releases>
      <enabled>false</enabled>
    </releases>
    <snapshots>
      <enabled>true</enabled>
    </snapshots>
  </repository>
</repositories>

<dependencies>
...
  <dependency>
    <groupId>de.saxsys.roo</groupId>
    <artifactId>de.saxsys.roo.equals.annotations</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </dependency>
</dependencies>
}}}
Now you are ready to use the @!RooEquals annotation.

===Usage of @!RooEquals===

Annotating a class with @!RooEquals will trigger the creation of the equals() and hashCode() methods in a separate AspectJ file.
The implementation delegates to the [http://commons.apache.org/lang/api-release/org/apache/commons/lang/builder/EqualsBuilder.html EqualsBuilder] and [http://commons.apache.org/lang/api-release/org/apache/commons/lang/builder/HashCodeBuilder.html HashCodeBuilder] provided by the Apache Commons Lang project.
{{{
TODO
}}}